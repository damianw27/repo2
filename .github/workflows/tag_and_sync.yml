name: Create TAG and send sync request

on:
  push:
    branches: [ "main" ]

env:
    GH_TOKEN: ${{ github.token }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: fregante/setup-git-user@v2

      - name: Check Version Changed
        id: check
        run: |
          MAJOR=$(jq -r '.major' version.json)
          MINOR=$(jq -r '.minor' version.json)
          PATCH=$(jq -r '.patch' version.json)
          VERSION_TAG="v$MAJOR.$MINOR.$PATCH"
          EXISTING_TAGS=$(gh api repos/:owner/:repo/tags --jq '.[].name')
          CHANGED_FILES=$(git diff --name-only $(git merge-base --fork-point remotes/origin/main || git merge-base remotes/origin/main HEAD))
          echo "$LAST_TAG"
          if (echo "$CHANGED_FILES" | grep -q "version.json" || ! echo "$EXISTING_TAGS" | grep -q "$VERSION_TAG") && ! git rev-parse "$VERSION_TAG" >/dev/null 2>&1; then
          	echo "should_tag=true" >> $GITHUB_OUTPUT
          else
          	echo "should_tag=false" >> $GITHUB_OUTPUT
          fi

      - name: Create TAG
        if: steps.check.outputs.should_tag == 'true'
        run: |
          MAJOR=$(jq -r '.major' version.json)
          MINOR=$(jq -r '.minor' version.json)
          PATCH=$(jq -r '.patch' version.json)
          VERSION_TAG="v$MAJOR.$MINOR.$PATCH"
          git tag "$VERSION_TAG"
          git push origin "$VERSION_TAG"

      - name: Send Sync Request
        if: steps.check.outputs.should_tag == 'true'
        run: |
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.REPO1_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/damianw27/repo1/actions/workflows/synchronize-with-repo2.yml/dispatches \
            -d '{"ref":"main"}'
          
       
          
